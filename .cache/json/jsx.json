{
    "data": {
        "site": {
            "siteMetadata": {
                "title": "React FAQ",
                "author": "Tim Arney"
            }
        },
        "markdownRemark": {
            "id": "/Users/timarney/Desktop/faq/react-faq/src/pages/jsx.md absPath of file >>> MarkdownRemark",
            "html": "<p><strong>Whatâ€™s JSX?</strong></p>\n<blockquote>\n<p>JSX is a preprocessor step that adds XML syntax to JavaScript. You can definitely use React without JSX but JSX makes React a lot more elegant. - <a href=\"http://buildwithreact.com/tutorial/jsx\">http://buildwithreact.com/tutorial/jsx</a></p>\n</blockquote>\n<blockquote>\n<p><strong>Tip:</strong> ðŸ¤” You can play around with JSX <a href=\"https://babeljs.io/repl/#?babili=false&#x26;evaluate=true&#x26;lineWrap=false&#x26;presets=es2015%252Creact%252Cstage-0&#x26;targets=&#x26;browsers=&#x26;builtIns=false&#x26;code=function%20hello()%20%7B%0A%20%20return%20%3Cdiv%20className%253D%22myclass%22%3EHello%20world!%3C%252Fdiv%3E%253B%0A%7D\">here</a>.</p>\n</blockquote>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-javascript\"><code><span class=\"token comment\" spellcheck=\"true\">// This is JSX</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"myclass\"</span><span class=\"token operator\">></span>Hello world<span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// When compiled it gets turned into a function</span>\n<span class=\"token string\">\"use strict\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"div\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> className<span class=\"token punctuation\">:</span> <span class=\"token string\">\"myclass\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"Hello world!\"</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n      </div>\n<ul>\n<li><a href=\"http://buildwithreact.com/tutorial/jsx\">Tutorial: JSX</a></li>\n<li><a href=\"https://facebook.github.io/react/docs/jsx-in-depth.html\">JSX in Depth</a></li>\n<li><a href=\"https://medium.com/@housecor/react-s-jsx-the-other-side-of-the-coin-2ace7ab62b98#.i5rmd9h07\">Reactâ€™s JSX: The Other Side of the Coin</a> Cory House @housecor</li>\n<li><a href=\"https://twitter.com/tomocchino/status/769931611303321601\">What does JSX stand for?</a> Tom Occhino @tomocchino</li>\n</ul>\n<p><strong>What does JSX really do for me?</strong></p>\n<p><a href=\"https://gist.github.com/insin/8e72bed793772d82ca8d\">This is the sort of stuff JSX saves you from having to manage</a> Jonny Buchanan @jbscript</p>\n<p><strong>Can I use JSX for conditionals?</strong></p>\n<blockquote>\n<p>Yes thereâ€™s a babel plugin for that <a href=\"https://www.npmjs.com/package/jsx-control-statements\">jsx-control-statements</a></p>\n</blockquote>\n<ul>\n<li><a href=\"https://tomat.blog/a-cleaner-solution-for-conditionals-and-loops-in-jsx-using-babel-6-a67dcaee9b06#.tlsxvz52a\">A cleaner solution for conditionals and loops in JSX using Babel 6</a></li>\n</ul>",
            "frontmatter": {
                "title": "JSX"
            }
        }
    },
    "pathContext": {
        "path": "/jsx/"
    }
}