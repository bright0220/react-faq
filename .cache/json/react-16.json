{
    "data": {
        "site": {
            "siteMetadata": {
                "title": "React FAQ",
                "author": "Tim Arney"
            }
        },
        "markdownRemark": {
            "id": "/Users/timarney/Desktop/faq/react-faq/src/pages/react16.md absPath of file >>> MarkdownRemark",
            "html": "<blockquote>\n<p>This initial React 16.0 release is mostly focused on compatibility with existing apps. It does not enable asynchronous rendering yet. We will introduce an opt-in to the async mode later during React 16.x. We don’t expect React 16.0 to make your apps significantly faster or slower, but we’d love to know if you see improvements or regressions. @bvaughn</p>\n</blockquote>\n<p><strong>React 16 RC Notes</strong></p>\n<ul>\n<li><a href=\"https://github.com/facebook/react/issues/10294\">React 16 RC #10294</a></li>\n</ul>\n<p><strong>Where can I find some good information for React 16?</strong></p>\n<p><em>Error Handling</em></p>\n<ul>\n<li><a href=\"https://facebook.github.io/react/blog/2017/07/26/error-handling-in-react-16.html\">Error Handling in React 16</a> Dan Abramov @dan_abramov</li>\n<li><a href=\"https://egghead.io/lessons/react-error-handling-using-error-boundaries-in-react-16\">Error Handling using Error Boundaries in React 16</a> Nik Graf @nikgraf</li>\n<li><a href=\"https://medium.com/@sgroff04/2-minutes-to-learn-react-16s-componentdidcatch-lifecycle-method-d1a69a1f753\">2 Minutes to Learn React 16’s componentDidCatch Lifecycle Method</a> Sean Groff @_SeanGroff</li>\n<li><a href=\"https://codeburst.io/catching-exceptions-using-higher-order-components-in-react-16-b8a401853a10\">Catching exceptions using Higher Order Components in React 16</a> Giorgi Bagdavadze @notgiorgi</li>\n</ul>\n<p><em>DOM Attributes</em></p>\n<ul>\n<li><a href=\"https://facebook.github.io/react/blog/2017/09/08/dom-attributes-in-react-16.html\">DOM Attributes in React 16</a> Dan Abramov @dan_abramov</li>\n</ul>\n<p><em>Portals</em></p>\n<ul>\n<li>DEMO rendering Portals using ReactDOM.createPortal -> <a href=\"https://codesandbox.io/s/3r7zxqzx55\">https://codesandbox.io/s/3r7zxqzx55</a></li>\n</ul>\n<p><em>Async Mode</em></p>\n<p><strong>Lin Clark - A Cartoon Intro to Fiber - React Conf 2017</strong></p>\n<div>\n          <div\n            class=\"gatsby-resp-iframe-wrapper\"\n            style=\"padding-bottom: 56.25%; position: relative; height: 0; overflow: hidden;margin-bottom: 1.0725rem\"\n          >\n            <html><head></head><body><iframe src=\"https://www.youtube.com/embed/ZCuYPiUIONs\" frameborder=\"0\" allowfullscreen style=\"\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n          \"></iframe></body></html>\n          </div>\n          </div>\n<p>Additional Fiber info here <a href=\"https://reactfaq.site/react-fiber\">https://reactfaq.site/react-fiber</a></p>\n<p><em>Fragments</em></p>\n<p><strong>How does returning arrays from render work?</strong></p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-javascript\"><code><span class=\"token keyword\">const</span> names <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Dan\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Kent\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Ryan\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/* No wrapping element! */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">List</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> names<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=></span> <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n      </div>\n<p>see: <a href=\"https://codesandbox.io/s/y0rroo6olz\">https://codesandbox.io/s/y0rroo6olz</a></p>\n<p><strong>Note:</strong> You can also return a String <a href=\"https://codesandbox.io/s/oxjo7woo4y\">https://codesandbox.io/s/oxjo7woo4y</a></p>\n<hr>\n<p><strong>Roadmap for React (Fiber and Beyond)</strong></p>\n<div>\n          <div\n            class=\"gatsby-resp-iframe-wrapper\"\n            style=\"padding-bottom: 56.25%; position: relative; height: 0; overflow: hidden;margin-bottom: 1.0725rem\"\n          >\n            <html><head></head><body><iframe src=\"https://www.youtube.com/embed/QW5TE4vrklU\" frameborder=\"0\" allowfullscreen style=\"\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n          \"></iframe></body></html>\n          </div>\n          </div>\n<blockquote>\n<p>Calling setState with null no longer triggers an update. This allows you to decide in an updater function if you want to re-render.</p>\n</blockquote>",
            "frontmatter": {
                "title": "React 16"
            }
        }
    },
    "pathContext": {
        "path": "/react16/"
    }
}