{
    "data": {
        "site": {
            "siteMetadata": {
                "title": "React FAQ",
                "author": "Tim Arney"
            }
        },
        "markdownRemark": {
            "id": "/Users/timarney/Desktop/faq/react-faq/src/pages/components/props.md absPath of file >>> MarkdownRemark",
            "html": "<p><strong>What are props?</strong></p>\n<blockquote>\n<p>props (short for properties) are a Componentâ€™s configuration, its options if you may. They are received from above and immutable as far as the Component receiving them is concerned. - react-guide</p>\n</blockquote>\n<p>See : <a href=\"https://youtu.be/qh3dYM6Keuw?t=290\">State vs Props &#x26; Application Data</a> also <a href=\"https://github.com/uberVU/react-guide/blob/master/props-vs-state.md\">props vs state</a></p>\n<p><strong>How do I pass props?</strong></p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-javascript\"><code><span class=\"token comment\" spellcheck=\"true\">// manual transfer</span>\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Shirt color<span class=\"token operator\">=</span><span class=\"token string\">\"steelblue\"</span> num<span class=\"token operator\">=</span><span class=\"token string\">\"3.14\"</span> size<span class=\"token operator\">=</span><span class=\"token string\">\"medium\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#container\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n      </div>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-javascript\"><code><span class=\"token comment\" spellcheck=\"true\">// using JSX spread attributes</span>\n<span class=\"token operator\">&lt;</span>Component <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">}</span> more<span class=\"token operator\">=</span><span class=\"token string\">\"values\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n</code></pre>\n      </div>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-javascript\"><code><span class=\"token comment\" spellcheck=\"true\">// destructuring assignment with rest properties</span>\n<span class=\"token comment\" spellcheck=\"true\">// ensures that you pass down all the props EXCEPT the ones you're consuming yourself</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">FancyCheckbox</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> <span class=\"token punctuation\">{</span> checked<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>other <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> props<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> fancyClass <span class=\"token operator\">=</span> checked <span class=\"token operator\">?</span> <span class=\"token string\">'FancyChecked'</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">'FancyUnchecked'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\" spellcheck=\"true\">// `other` contains { onClick: console.log } but not the checked property</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>other<span class=\"token punctuation\">}</span> className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>fancyClass<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>FancyCheckbox checked<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span> onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>console<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>console<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n    Hello world<span class=\"token operator\">!</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>FancyCheckbox<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n      </div>\n<p><strong>How do I pass boolean values?</strong></p>\n<ul>\n<li><a href=\"https://twitter.com/Jack_Franklin/status/768735664485568512\">JSX <code>&#x3C;Foo bar={true} /></code> and <code>&#x3C;Foo bar></code> are equivalent</a> Jack Franklin @Jack_Franklin</li>\n</ul>\n<p><strong>Should I use import, props, or context in React?</strong></p>\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/39111775/differences-between-require-and-passing-an-object-via-prop-or-context/39111942\">Differences between require() and passing an object via prop or context</a> Dan Abramov @dan_abramov</li>\n</ul>\n<h2>PropTypes</h2>\n<blockquote>\n<p><strong>Note:</strong> ðŸ“Œ As of React v15.5.0 prop types are separate package <a href=\"https://github.com/reactjs/prop-types#installation\">https://github.com/reactjs/prop-types#installation</a> + <a href=\"https://facebook.github.io/react/blog/2017/04/07/react-v15.5.0.html\">https://facebook.github.io/react/blog/2017/04/07/react-v15.5.0.html</a></p>\n</blockquote>\n<hr>\n<blockquote>\n<p>PropTypes are essentially a dictionary where you define what props your component needs and what type(s) they should be. -  Niels Gerritsen</p>\n</blockquote>\n<p><strong>What are PropTypes?</strong></p>\n<ul>\n<li><a href=\"https://themeteorchef.com/snippets/what-are-proptypes\">What are PropTypes?</a> Ryan Glover @themeteorchef</li>\n</ul>\n<p><strong>Why are React PropTypes important?</strong></p>\n<ul>\n<li><a href=\"http://wecodetheweb.com/2015/06/02/why-react-proptypes-are-important\">Why React PropTypes are important</a>  Niels Gerritsen @NielsG89</li>\n</ul>\n<p><strong>How do I validate props?</strong></p>\n<ul>\n<li><a href=\"https://medium.com/@MoeSattler/better-prop-validation-in-react-cc83590d311f#.wdhbsrlgj\">Better Prop Validation in React</a> Moe Sattler @travelperk</li>\n</ul>\n<h2>Destructuring Props and DefaultProps</h2>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-none\"><code>function ExpandableForm({ onExpand, expanded = false, children }) {\n  return (\n    <form style={ expanded ? { height: 'auto' } : { height: 0 } }>\n      {children}\n      <button onClick={onExpand}>Expand</button>\n    </form>\n  )\n}</code></pre>\n      </div>\n<p>More info: <a href=\"https://medium.com/code-life/our-best-practices-for-writing-react-components-dec3eb5c3fc8?imm_mid=0ed2ce&#x26;cmp=em-web-na-na-newsltr_20170208#.69iorc683\">Our Best Practices for Writing React Components</a></p>",
            "frontmatter": {
                "title": "Props"
            }
        }
    },
    "pathContext": {
        "path": "/components/props/"
    }
}