{
    "data": {
        "site": {
            "siteMetadata": {
                "title": "React FAQ",
                "author": "Tim Arney"
            }
        },
        "markdownRemark": {
            "id": "/Users/timarney/Desktop/faq/react-faq/src/pages/components/component-types.md absPath of file >>> MarkdownRemark",
            "html": "<blockquote>\n<p>There are two main types of components <strong>Functional</strong> and <strong>Class Components</strong>.  If you need don’t need <a href=\"/ccddddbb77f7a94e37b8b19ee600a332.md\">lifecycle methods</a> prefer Functional /Stateless Components.</p>\n</blockquote>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-javascript\"><code><span class=\"token comment\" spellcheck=\"true\">// Functional Component</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">Welcome</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Hello<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// Class Component</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Welcome</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Hello<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">// Some other patterns you might see:</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// Functional Component</span>\n\n<span class=\"token keyword\">const</span> Profile <span class=\"token operator\">=</span> props <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>bio<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// Functional Component with destructuring of props</span>\n\n<span class=\"token keyword\">const</span> Profile <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">,</span> bio <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>bio<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n      </div>\n<p>Components can be used (composed) in many ways see the following links for patterns and thoughts on creating Components.</p>\n<p><strong>How do I decide what type of Component to use?</strong></p>\n<blockquote>\n<p>This comes down to a few factors… a primary one being you need to decide what a component should do.\nSee: <a href=\"https://medium.com/javascript-inside/some-thoughts-on-function-components-in-react-cb2938686bc7#.2oazdyli1\">Some Thoughts on Function Components in React</a> from A. Sharif @sharifsbeat for some help deciding.</p>\n</blockquote>\n<hr>\n<blockquote>\n<p>In this video <a href=\"https://www.youtube.com/watch?v=YaZg8wg39QQ\">React Component Patterns by Michael Chan</a> @chantastic breaks down some of the component types in a less technical way (using circles).</p>\n</blockquote>\n<p>Also:</p>\n<ul>\n<li><a href=\"https://reactjsnews.com/composing-components\">React.Component vs React.createClass</a> Naman Goel &#x26; Zach Silveira</li>\n<li><a href=\"https://toddmotto.com/react-create-class-versus-component\">React.createClass versus extends React.Component</a> Todd Motto</li>\n<li><a href=\"https://www.peterbe.com/plog/4-different-kinds-of-react-component-styles\">4 different kinds of React component styles</a> Peter Bengtsson @peterbe</li>\n<li><a href=\"http://rea.tech/functions-as-child-components-and-higher-order-components\">Functions as Child Components and Higher Order Components</a> Ken Ding</li>\n</ul>\n<p><strong>Stateless Function</strong> <a href=\"http://reactpatterns.com/#stateless-function\"><code>&#x3C;Code /></code></a></p>\n<ul>\n<li><a href=\"https://medium.com/@housecor/react-stateless-functional-components-nine-wins-you-might-have-overlooked-997b0d933dbc#.iydj782xq\">React Stateless Functional Components: Nine Wins You Might Have Overlooked</a> Cory House @housecor</li>\n<li><a href=\"https://medium.com/javascript-inside/embracing-functions-in-react-d7d558d8bd30#.igvxagy0e\">Embracing Functions in React</a> A. Sharif @sharifsbeat</li>\n<li><a href=\"https://medium.com/missive-app/45-faster-react-functional-components-now-3509a668e69f\">45% Faster React Functional Components, Now</a></li>\n</ul>\n<p><strong>Presentational and Container Components</strong>  <a href=\"http://reactpatterns.com/#container-component\"><code>&#x3C;Code /></code></a></p>\n<ul>\n<li><a href=\"https://medium.com/@dan_abramov/smart-and-dumb-components-7ca2f9a7c7d0#.xo2al5187\">Presentational and Container Components</a> Dan Abramov @dan_abramov</li>\n</ul>\n<p><strong>Higher-Order Components</strong> <a href=\"http://reactpatterns.com/#higher-order-component\"><code>&#x3C;Code /></code></a></p>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=LTunyI2Oyzw\">ReactCasts #1 - Higher Order Components</a> Cassio Zen @cassiozen</li>\n<li><a href=\"https://medium.com/@franleplant/react-higher-order-components-in-depth-cf9032ee6c3e#.mpb29ree6\">React Higher Order Components in depth</a> @franleplant</li>\n<li><a href=\"https://www.robinwieruch.de/gentle-introduction-higher-order-components/\">A gentle Introduction to Higher Order Components</a> @rwieruch</li>\n<li><a href=\"https://www.sitepoint.com/react-higher-order-components\">Higher Order Components: A React Application Design Pattern</a> Jack Franklin @Jack_Franklin</li>\n<li><a href=\"https://medium.com/@dan_abramov/mixins-are-dead-long-live-higher-order-components-94a0d2f9e750#.prpfdo79n\">Mixins Are Dead. Long Live Composition</a> Dan Abramov @dan_abramov</li>\n<li><a href=\"http://engineering.blogfoster.com/higher-order-components-theory-and-practice\">Higher Order Components: Theory and Practice</a></li>\n<li><a href=\"http://rea.tech/reactjs-real-world-examples-of-higher-order-components/\">Real World Examples of Higher-Order Components</a> Mehdi Mollaverdi @mehdimollaverdi</li>\n<li><a href=\"https://medium.freecodecamp.com/understanding-higher-order-components-6ce359d761b\">Understanding Higher Order Components</a> @tmeasday</li>\n<li><a href=\"https://medium.com/javascript-inside/why-higher-order-components-make-sense-fe4145b4e305\">Why Higher Order Components Make Sense</a> @sharifsbeat</li>\n</ul>\n<p><strong>Function as Child Components / Render callbacks</strong> <a href=\"http://reactpatterns.com/#function-as-children\"><code>&#x3C;Code /></code></a></p>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=WE3XAt9P8Ek\">ReactCasts #2 - Function as Child Components</a> Cassio Zen @cassiozen</li>\n<li><a href=\"https://medium.com/merrickchristensen/function-as-child-components-5f3920a9ace9#.10fbiyqc5\">Function as Child Components</a> Merrick Christensen @iammerrick</li>\n<li><a href=\"https://twitter.com/brian_d_vaughn/status/779362701596164097\">I’ve mentioned this before, but I’m a big fan of child functions in React</a> Brian Vaughn @brian<em>d</em>vaughn</li>\n<li><a href=\"https://medium.com/@adamrackis/simplifying-life-with-react-render-callbacks-cb37d58e55\">Simplifying life with React render callbacks</a> @AdamRackis</li>\n<li><a href=\"https://leoasis.github.io/posts/2017/03/27/react-patterns-render-callback\">React Patterns - Render Callback</a> @leogcrespo</li>\n<li><a href=\"https://trevordmiller.com/blog/react-render-callback-components\">Sharing stateful UI logic in React apps using Render Callback components</a> @trevordmiller</li>\n</ul>\n<p><strong>What is a Pure Component?</strong></p>\n<p>Pure Components are any Component declared as a function that has no state and returns the same markup given the same props.</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-javascript\"><code><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> ‘react’<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> HelloWorld <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token string\">`Hi </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> HelloWorld<span class=\"token punctuation\">;</span>\n</code></pre>\n      </div>\n<ul>\n<li><a href=\"https://tylermcginnis.com/building-user-interfaces-with-pure-functions-and-function-composition-in-react-js\">Building User Interfaces with Pure Functions and Function Composition in React</a> @tylermcginnis33</li>\n</ul>\n<p><strong>What types of components are there?</strong></p>\n<ul>\n<li><a href=\"https://blog.anthonycomito.com/react-component-jargon-as-of-august-2016-28451d8ceb1d#.a417p5u26\">React Component Jargon as of August 2016</a> Anthony Comito @a_comito</li>\n</ul>",
            "frontmatter": {
                "title": "Component Types"
            }
        }
    },
    "pathContext": {
        "path": "/components/component-types/"
    }
}